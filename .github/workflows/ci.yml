name: Build+Test

on: [push]

jobs:
  build:
    name: Build FW+Bootloaders
    runs-on: ubuntu-18.04
    steps:
      - name: Pull the repository and submodules
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Prepare build env
        run: |
          wget https://developer.arm.com/-/media/Files/downloads/gnu-rm/9-2019q4/RC2.1/gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux.tar.bz2 -O armtoolchain.tar.bz2
          sudo apt-get install -y srecord jq
          tar xjf armtoolchain.tar.bz2
          git clone https://github.com/Synapseware/avr-toolchain
          tar xzf avr-toolchain/toolchain/avr8-gnu-toolchain-3.6.2.1759-linux.any.x86_64.tar.gz
      - name: Build
        run: |
          PATH=$(pwd)/avr8-gnu-toolchain-linux_x86_64/bin:$(pwd)/gcc-arm-none-eabi-9-2019-q4-major/bin:${PATH}
          cd src/
          ../scripts/build_targets.sh --type=fw_all
  test:
    name: Run tests
    runs-on: ubuntu-18.04
    steps:
       - name: Pull the repository and submodules
         uses: actions/checkout@v1
         with:
          submodules: true
       - name: Prepare build env
         run: |
           wget https://apt.llvm.org/llvm-snapshot.gpg.key
           sudo apt-key add llvm-snapshot.gpg.key
           sudo add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
           sudo apt update
           sudo apt-get install -y clang-9 ctags jq
       - name: Build
         run: |
           C_COMPILER=clang-9
           CPP_COMPILER=clang++-9
           cd tests/
           ../scripts/build_targets.sh --type=tests
           make exec
  format:
    name: Code formatting
    runs-on: ubuntu-18.04
    steps:
       - name: Pull the repository
         uses: actions/checkout@v1
         with:
          submodules: true
       - name: Prepare env
         run: |
           wget https://apt.llvm.org/llvm-snapshot.gpg.key
           sudo apt-key add llvm-snapshot.gpg.key
           sudo add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
           sudo apt update
           sudo apt-get install -y clang-format-9
       - name: Format
         run: |
           cd src
           make format CF_FAIL_ON_DIFF=1 CLANG_FORMAT=clang-format-9
           cd ../tests
           make format CF_FAIL_ON_DIFF=1 CLANG_FORMAT=clang-format-9
